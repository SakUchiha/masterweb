class UIManager{constructor(){this.loadingElements=new Set,this.notifications=[]}showLoading(e,t="Loading...",n="spinner"){const i=document.getElementById(e);if(!i)return;if(this.loadingElements.has(e))return;this.loadingElements.add(e);const s=i.innerHTML;if(i.setAttribute("data-original-content",s),i.setAttribute("aria-busy","true"),"skeleton"===n)i.innerHTML=this.createSkeletonLoader(e);else{if("pulse"===n)return i.classList.add("loading-pulse"),void i.setAttribute("aria-busy","true");if("dots"===n)i.innerHTML=`\n        <div class="loading-dots" role="status" aria-label="${t}">\n          <span></span><span></span><span></span>\n          <span class="sr-only">${t}</span>\n        </div>\n      `;else{if("overlay"===n)return void this.showLoadingOverlay(t);i.innerHTML=`\n        <div class="loading-spinner" role="status" aria-label="${t}">\n          <div class="spinner" aria-hidden="true"></div>\n          <span>${t}</span>\n        </div>\n      `}}i.classList.add("loading"),i.setAttribute("aria-busy","true"),i.setAttribute("aria-label",t)}hideLoading(e){const t=document.getElementById(e);if(!t)return;if(!this.loadingElements.has(e))return;this.loadingElements.delete(e);const n=t.getAttribute("data-original-content");null!==n&&(t.innerHTML=n,t.removeAttribute("data-original-content")),t.classList.remove("loading","loading-pulse"),t.removeAttribute("aria-busy"),t.removeAttribute("aria-label")}createSkeletonLoader(e){return"lessonsGrid"===e?`\n        <div class="skeleton-grid">\n          ${Array(6).fill().map(()=>'\n            <div class="skeleton-lesson-card">\n              <div class="skeleton-header">\n                <div class="skeleton-category skeleton"></div>\n                <div class="skeleton-meta">\n                  <div class="skeleton-badge skeleton"></div>\n                  <div class="skeleton-badge skeleton"></div>\n                </div>\n              </div>\n              <div class="skeleton-content">\n                <div class="skeleton-title skeleton"></div>\n                <div class="skeleton-summary skeleton"></div>\n                <div class="skeleton-description skeleton"></div>\n                <div class="skeleton-description skeleton"></div>\n                <div class="skeleton-description skeleton"></div>\n                <div class="skeleton-objectives">\n                  <div class="skeleton-objective skeleton"></div>\n                  <div class="skeleton-objective skeleton"></div>\n                  <div class="skeleton-objective skeleton"></div>\n                </div>\n              </div>\n              <div class="skeleton-footer">\n                <div class="skeleton-hints">\n                  <div class="skeleton-avatar skeleton"></div>\n                  <div class="skeleton-hint-text skeleton"></div>\n                </div>\n                <div class="skeleton-button skeleton"></div>\n              </div>\n            </div>\n          ').join("")}\n        </div>\n      `:'\n      <div class="skeleton-card">\n        <div class="skeleton-title skeleton"></div>\n        <div class="skeleton-text skeleton"></div>\n        <div class="skeleton-text skeleton"></div>\n        <div class="skeleton-text skeleton"></div>\n        <div class="skeleton-button skeleton"></div>\n      </div>\n    '}showNotification(e,t="info",n=5e3,i={}){i.persistent||(this.notifications=this.notifications.filter(e=>e.type!==t||e.element));const s=document.createElement("div");s.className=`notification notification-${t}`,s.setAttribute("role","alert"),s.setAttribute("aria-live","assertive");let o="";i.action&&(o=`<button class="notification-action" onclick="${i.action.callback}">${i.action.label}</button>`),s.innerHTML=`\n      <div class="notification-content">\n        <i class="fas ${this.getNotificationIcon(t)}" aria-hidden="true"></i>\n        <span>${e}</span>\n        ${o}\n        <button class="notification-close" onclick="uiManager.hideNotification(this)" aria-label="Close notification">\n          <i class="fas fa-times" aria-hidden="true"></i>\n        </button>\n      </div>\n    `;const a={element:s,type:t,timeout:i.persistent?null:setTimeout(()=>this.hideNotification(s),n)};this.notifications.push(a),setTimeout(()=>s.classList.add("show"),10),i.focus&&s.focus()}hideNotification(e){const t=this.notifications.find(t=>t.element===e);t&&(clearTimeout(t.timeout),this.notifications=this.notifications.filter(e=>e!==t)),e.classList.remove("show"),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},300)}getNotificationIcon(e){const t={success:"fa-check-circle",error:"fa-exclamation-circle",warning:"fa-exclamation-triangle",info:"fa-info-circle"};return t[e]||t.info}showError(e,t=null,n={}){const i=t?{label:"Try Again",callback:`uiManager.hideNotification(this.parentElement.parentElement); (${t.toString()})()`}:null;this.showNotification(e,"error",n.duration||1e4,{action:i,persistent:n.persistent||!1})}showWarning(e,t={}){this.showNotification(e,"warning",t.duration||7e3,t)}showInfo(e,t={}){this.showNotification(e,"info",t.duration||5e3,t)}showSuccess(e){this.showNotification(e,"success")}showAnimatedProgress(e,t,n={}){const i=document.getElementById(e);if(!i)return;let s=i.querySelector(".animated-progress-bar");s||(s=document.createElement("div"),s.className="animated-progress-bar",s.innerHTML=`\n        <div class="progress-track">\n          <div class="progress-fill"></div>\n          <div class="progress-glow"></div>\n        </div>\n        <div class="progress-text">${t}%</div>\n      `,i.appendChild(s));const o=s.querySelector(".progress-fill"),a=s.querySelector(".progress-glow"),r=s.querySelector(".progress-text");o.style.width=`${t}%`,a.style.width=`${t}%`,r.textContent=`${Math.round(t)}%`,t>=100&&n.onComplete&&setTimeout(()=>{s.classList.add("completed"),n.onComplete()},500)}showFloatingFeedback(e,t="info"){const n=document.createElement("div");n.className=`floating-feedback ${t}`,n.innerHTML=`\n      <i class="fas ${this.getFeedbackIcon(t)}"></i>\n      <span>${e}</span>\n    `,n.style.cssText=`\n      position: fixed;\n      bottom: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: var(--${"success"===t?"success":"error"===t?"danger":"primary"});\n      color: white;\n      padding: 12px 24px;\n      border-radius: 25px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n      z-index: 10000;\n      animation: floatingFeedback 3s ease-out;\n      pointer-events: none;\n    `,document.body.appendChild(n),setTimeout(()=>{n.parentNode&&n.remove()},3e3)}getFeedbackIcon(e){const t={success:"fa-check-circle",error:"fa-exclamation-circle",info:"fa-info-circle",warning:"fa-exclamation-triangle"};return t[e]||t.info}toggleVisibility(e,t=null){const n=document.getElementById(e);n&&(null===t&&(t="none"===n.style.display),n.style.display=t?"block":"none")}scrollToElement(e){const t=document.getElementById(e);t&&t.scrollIntoView({behavior:"smooth",block:"start"})}setButtonLoading(e,t=!0,n="Loading..."){const i=document.getElementById(e);if(i)if(i.disabled=t,t){const e=i.textContent;i.setAttribute("data-original-text",e),i.innerHTML=`<i class="fas fa-spinner fa-spin"></i> ${n}`}else{const e=i.getAttribute("data-original-text");e&&(i.textContent=e,i.removeAttribute("data-original-text"))}}showLoadingOverlay(e="Loading..."){let t=document.getElementById("loading-overlay");t?(t.querySelector("p").textContent=e,t.style.display="flex"):(t=document.createElement("div"),t.id="loading-overlay",t.className="loading-overlay",t.innerHTML=`\n        <div class="loading-content">\n          <div class="spinner"></div>\n          <p>${e}</p>\n        </div>\n      `,document.body.appendChild(t))}hideLoadingOverlay(){const e=document.getElementById("loading-overlay");e&&(e.style.display="none")}showProgress(e,t){const n=document.getElementById(e);if(!n)return;let i=n.querySelector(".progress-container");i||(i=document.createElement("div"),i.className="progress-container",i.innerHTML='<div class="progress-fill"></div>',n.appendChild(i));const s=i.querySelector(".progress-fill");s.style.setProperty("--progress",`${t}%`),s.style.width=`${t}%`}showCircularProgress(e,t){const n=document.getElementById(e);if(!n)return;let i=n.querySelector(".circular-progress");i||(i=document.createElement("div"),i.className="circular-progress",i.innerHTML='\n        <svg>\n          <circle class="bg" cx="30" cy="30" r="25"></circle>\n          <circle class="progress" cx="30" cy="30" r="25"></circle>\n        </svg>\n      ',n.appendChild(i));const s=i.querySelector(".progress"),o=2*Math.PI*25,a=o-t/100*o;s.style.strokeDashoffset=a}clearAllLoading(){this.loadingElements.forEach(e=>{this.hideLoading(e)}),this.loadingElements.clear(),this.hideLoadingOverlay()}initTheme(){const e=document.getElementById("theme-toggle");if(!e)return;const t=localStorage.getItem("theme"),n=window.matchMedia("(prefers-color-scheme: dark)").matches,i=t||(n?"dark":"light");this.setTheme(i),e.addEventListener("click",()=>{const e="dark"===(document.documentElement.getAttribute("data-theme")||"light")?"light":"dark";this.setTheme(e)}),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",e=>{localStorage.getItem("theme")||this.setTheme(e.matches?"dark":"light")})}setTheme(e){const t=document.getElementById("theme-toggle"),n=t?.querySelector("i");document.documentElement.style.transition="background-color 0.3s ease, color 0.3s ease",document.documentElement.setAttribute("data-theme",e),localStorage.setItem("theme",e),n&&(n.className="dark"===e?"fas fa-sun":"fas fa-moon",t.setAttribute("aria-label",`Switch to ${"dark"===e?"light":"dark"} mode`)),document.body.classList.add("page-enter"),setTimeout(()=>{document.body.classList.remove("page-enter")},500)}initAnimations(){const e=new IntersectionObserver(e=>{e.forEach(e=>{if(e.isIntersecting){e.target.classList.add("animate-in");const t=Array.from(e.target.parentNode.children).indexOf(e.target);e.target.style.animationDelay=.1*t+"s"}})},{threshold:.1,rootMargin:"0px 0px -50px 0px"});document.querySelectorAll(".feature-card, .step, .stat-card, .lesson-card, .path-card").forEach(t=>{e.observe(t)}),document.addEventListener("click",e=>{if(e.target&&e.target.closest&&"function"==typeof e.target.closest){const t=e.target.closest(".btn, .nav-link, .feature-card, .lesson-card, .path-card");t&&!t.classList.contains("loading")&&this.addClickAnimation(t)}}),document.addEventListener("mouseenter",e=>{if(e.target&&e.target.closest&&"function"==typeof e.target.closest){const t=e.target.closest(".btn, .nav-link, .feature-card, .lesson-card");t&&(t.style.transform="scale(1.02)",t.style.transition="transform 0.2s ease")}}),document.addEventListener("mouseleave",e=>{if(e.target&&e.target.closest&&"function"==typeof e.target.closest){const t=e.target.closest(".btn, .nav-link, .feature-card, .lesson-card");t&&(t.style.transform="")}}),document.addEventListener("touchstart",e=>{if(e.target&&e.target.closest&&"function"==typeof e.target.closest){const t=e.target.closest(".btn, .nav-link, .feature-card, .lesson-card");t&&!t.classList.contains("loading")&&(t.style.transform="scale(0.98)",t.style.transition="transform 0.1s ease")}}),document.addEventListener("touchend",e=>{if(e.target&&e.target.closest&&"function"==typeof e.target.closest){const t=e.target.closest(".btn, .nav-link, .feature-card, .lesson-card");t&&(t.style.transform="")}})}addClickAnimation(e){e.style.animation="none",e.offsetHeight,e.style.animation="clickFeedback 0.3s ease-out",setTimeout(()=>{e.style.animation=""},300)}init(){if(this.initTheme(),this.initAnimations(),!document.getElementById("notification-styles")){const e=document.createElement("style");e.id="notification-styles",e.textContent="\n        .notification-container {\n          position: fixed;\n          top: 20px;\n          right: 20px;\n          z-index: 10000;\n          max-width: 400px;\n        }\n        .notification {\n          background: var(--card);\n          border-radius: 8px;\n          box-shadow: var(--shadow);\n          margin-bottom: 10px;\n          transform: translateX(100%);\n          transition: transform 0.3s ease;\n          border-left: 4px solid;\n          color: var(--text);\n        }\n        .notification.show {\n          transform: translateX(0);\n        }\n        .notification-success { border-left-color: var(--success); }\n        .notification-error { border-left-color: var(--danger); }\n        .notification-warning { border-left-color: var(--warning); }\n        .notification-info { border-left-color: var(--primary); }\n        .notification-content {\n          padding: 15px;\n          display: flex;\n          align-items: center;\n          gap: 10px;\n        }\n        .notification-close {\n          background: none;\n          border: none;\n          color: var(--muted);\n          cursor: pointer;\n          padding: 4px;\n          margin-left: auto;\n          border-radius: 4px;\n          transition: background-color 0.2s;\n        }\n\n        .notification-close:hover,\n        .notification-close:focus {\n          background: var(--surface);\n          outline: 2px solid rgba(99, 102, 241, 0.4);\n          outline-offset: 2px;\n        }\n\n        .notification-action {\n          background: var(--surface);\n          color: var(--text);\n          border: 1px solid var(--border);\n          padding: 4px 12px;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 0.9rem;\n          margin-right: 8px;\n          transition: all 0.2s;\n        }\n\n        .notification-action:hover,\n        .notification-action:focus {\n          background: var(--primary);\n          color: white;\n          border-color: var(--primary);\n          outline: 2px solid rgba(99, 102, 241, 0.4);\n          outline-offset: 2px;\n        }\n        .loading-spinner {\n          display: flex;\n          align-items: center;\n          gap: 10px;\n          justify-content: center;\n          padding: 20px;\n        }\n        .spinner {\n          width: 20px;\n          height: 20px;\n          border: 2px solid var(--border);\n          border-top: 2px solid var(--primary);\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n        }\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n        .error-message {\n          color: var(--danger);\n          font-weight: 500;\n        }\n        .retry-btn {\n          background: var(--danger);\n          color: white;\n          border: none;\n          padding: 5px 10px;\n          border-radius: 4px;\n          cursor: pointer;\n          margin-left: 10px;\n        }\n      ",document.head.appendChild(e)}}}const uiManager=new UIManager;window.uiManager=uiManager,document.addEventListener("DOMContentLoaded",()=>{uiManager.init()});