class AchievementSystem{constructor(e){this.progressTracker=e,this.notifications=[],this.init()}init(){this.loadAchievementTemplates(),this.setupNotificationSystem()}loadAchievementTemplates(){}setupNotificationSystem(){this.notificationContainer=this.createNotificationContainer(),document.body.appendChild(this.notificationContainer)}createNotificationContainer(){const e=document.createElement("div");return e.id="achievement-notifications",e.className="achievement-notifications",e.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      z-index: 10000;\n      pointer-events: none;\n    ",e}showAchievementNotification(e){e.forEach((e,t)=>{setTimeout(()=>{const t=this.progressTracker.achievements[e];t&&this.createAchievementToast(t)},500*t)})}createAchievementToast(e){const t=document.createElement("div");t.className="achievement-toast",t.innerHTML=`\n      <div class="achievement-content">\n        <div class="achievement-icon">${e.icon}</div>\n        <div class="achievement-details">\n          <h4>Achievement Unlocked!</h4>\n          <h3>${e.name}</h3>\n          <p>${e.description}</p>\n          ${e.points?`<div class="achievement-points">+${e.points} points</div>`:""}\n        </div>\n        <button class="achievement-close" onclick="this.parentElement.parentElement.remove()">×</button>\n      </div>\n    `,t.style.cssText="\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      border-radius: 12px;\n      padding: 20px;\n      margin-bottom: 10px;\n      box-shadow: 0 8px 25px rgba(0,0,0,0.3);\n      transform: translateX(400px);\n      opacity: 0;\n      transition: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n      pointer-events: auto;\n      cursor: pointer;\n      min-width: 350px;\n    ",this.notificationContainer.appendChild(t),setTimeout(()=>{t.style.transform="translateX(0)",t.style.opacity="1"},100),setTimeout(()=>{t.parentElement&&(t.style.transform="translateX(400px)",t.style.opacity="0",setTimeout(()=>t.remove(),500))},5e3),t.addEventListener("click",()=>{t.style.transform="translateX(400px)",t.style.opacity="0",setTimeout(()=>t.remove(),500)})}getAchievementProgress(e){const t=this.progressTracker.getProgress();if(!this.progressTracker.achievements[e])return null;let n=0,s=0;switch(e){case"first_lesson":n=t.totalLessons,s=1;break;case"code_master":n=t.totalLessons,s=5;break;case"ai_helper":n=t.aiInteractions,s=10;break;case"validator":n="number"==typeof t.codeExplanations?t.codeExplanations:t.codeValidations||0,s=20;break;case"streak_7":n=t.currentStreak,s=7;break;case"editor_pro":n=t.filesSaved,s=10;break;case"quiz_champion":n=t.quizScores.filter(e=>100===e.score).length,s=3;break;case"perfectionist":n=t.quizScores.slice(-5).filter(e=>100===e.score).length,s=5;break;case"explorer":n=Object.values(t.subjectProgress).filter(e=>e.completed>0).length,s=3}return{current:n,target:s,percentage:Math.min(n/s*100,100),completed:t.achievements.includes(e)}}getAllAchievementProgress(){return Object.keys(this.progressTracker.achievements).map(e=>({id:e,...this.progressTracker.achievements[e],...this.getAchievementProgress(e)}))}getRecentAchievements(e=7){const t=this.progressTracker.getProgress(),n=new Date;return n.setDate(n.getDate()-e),t.achievements.map(e=>this.progressTracker.achievements[e]).filter(e=>!0)}createAchievementGallery(){const e=this.getAllAchievementProgress(),t=document.createElement("div");return t.className="achievement-gallery",e.forEach(e=>{const n=this.createAchievementCard(e);t.appendChild(n)}),t}createAchievementCard(e){const t=document.createElement("div");return t.className="achievement-card "+(e.completed?"unlocked":"locked"),t.innerHTML=`\n      <div class="achievement-icon">${e.icon}</div>\n      <div class="achievement-info">\n        <h4>${e.name}</h4>\n        <p>${e.description}</p>\n        ${e.points?`<div class="achievement-points">${e.points} pts</div>`:""}\n      </div>\n      ${e.completed?'<div class="achievement-unlocked">✓</div>':`\n        <div class="achievement-progress">\n          <div class="progress-bar">\n            <div class="progress-fill" style="width: ${e.percentage}%"></div>\n          </div>\n          <span class="progress-text">${e.current}/${e.target}</span>\n        </div>\n      `}\n    `,t}}let achievementSystem;document.addEventListener("DOMContentLoaded",()=>{window.progressTracker&&(achievementSystem=new AchievementSystem(window.progressTracker))});