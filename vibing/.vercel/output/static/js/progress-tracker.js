class ProgressTracker{constructor(){this.storageKey="kidlearner_progress",this.achievements={first_lesson:{name:"First Steps",description:"Completed your first lesson",icon:"🎯",points:10},code_master:{name:"Code Master",description:"Completed 5 lessons",icon:"👑",points:50},ai_helper:{name:"AI Assistant",description:"Asked AI for help 10 times",icon:"🤖",points:25},validator:{name:"Code Explainer",description:"Explained code 20 times",icon:"✅",points:30},streak_7:{name:"Week Warrior",description:"7-day learning streak",icon:"🔥",points:40},editor_pro:{name:"Editor Pro",description:"Saved 10 code files",icon:"💾",points:20},quiz_champion:{name:"Quiz Champion",description:"Scored 100% on 3 quizzes",icon:"🏆",points:60},speed_demon:{name:"Speed Demon",description:"Completed a lesson in under 5 minutes",icon:"⚡",points:35},perfectionist:{name:"Perfectionist",description:"Perfect score on 5 consecutive quizzes",icon:"💎",points:75},explorer:{name:"Explorer",description:"Tried all 3 programming languages",icon:"🗺️",points:45}},this.levels=[{level:1,name:"Beginner",pointsRequired:0,badge:"🌱"},{level:2,name:"Novice",pointsRequired:50,badge:"🌿"},{level:3,name:"Apprentice",pointsRequired:150,badge:"🌳"},{level:4,name:"Coder",pointsRequired:300,badge:"💻"},{level:5,name:"Developer",pointsRequired:500,badge:"👨‍💻"},{level:6,name:"Expert",pointsRequired:750,badge:"🧙‍♂️"},{level:7,name:"Master",pointsRequired:1e3,badge:"🏆"},{level:8,name:"Grandmaster",pointsRequired:1250,badge:"👑"},{level:9,name:"Legend",pointsRequired:1500,badge:"⭐"},{level:10,name:"Mythical",pointsRequired:2e3,badge:"🦄"}],this.init()}init(){this.getProgress()||this.resetProgress()}getProgress(){try{const e=JSON.parse(localStorage.getItem(this.storageKey))||null;return e&&null==e.codeExplanations&&"number"==typeof e.codeValidations&&(e.codeExplanations=e.codeValidations),e}catch(e){return null}}saveProgress(e){try{localStorage.setItem(this.storageKey,JSON.stringify(e))}catch(e){}}resetProgress(){const e={lessonsCompleted:[],totalLessons:0,aiInteractions:0,codeExplanations:0,codeValidations:0,filesSaved:0,lastActiveDate:(new Date).toISOString().split("T")[0],currentStreak:0,longestStreak:0,achievements:[],timeSpent:0,startDate:(new Date).toISOString(),quizScores:[],totalQuizScore:0,averageQuizScore:0,points:0,level:1,experiencePoints:0,dailyGoals:{lessons:0,quizzes:0,timeSpent:0},weeklyGoals:{lessons:7,quizzes:5,timeSpent:210},learningPath:"beginner",preferredDifficulty:"beginner",subjectProgress:{html:{completed:0,total:0,averageScore:0},css:{completed:0,total:0,averageScore:0},javascript:{completed:0,total:0,averageScore:0}},studyReminders:[],lastReminderDate:null};this.saveProgress(e)}completeLesson(e,t=0,s=null){const i=this.getProgress();if(!i.lessonsCompleted.includes(e)){i.lessonsCompleted.push(e),i.totalLessons=i.lessonsCompleted.length,i.timeSpent+=t,s&&i.subjectProgress[s]&&i.subjectProgress[s].completed++;const n=15;this.addPoints(n,i),t>0&&t<5&&this.unlockAchievement("speed_demon",i),this.updateStreak(),this.checkAchievements(i),this.updateLearningPath(i),this.saveProgress(i)}}incrementAIInteractions(){const e=this.getProgress();e.aiInteractions++,this.checkAchievements(e),this.saveProgress(e)}incrementValidations(){this.incrementExplanations()}incrementFilesSaved(){const e=this.getProgress();e.filesSaved++,this.checkAchievements(e),this.saveProgress(e)}updateStreak(){const e=this.getProgress(),t=(new Date).toISOString().split("T")[0],s=e.lastActiveDate;if(s===t)return;const i=new Date;i.setDate(i.getDate()-1);s===i.toISOString().split("T")[0]?(e.currentStreak++,e.currentStreak>e.longestStreak&&(e.longestStreak=e.currentStreak)):e.currentStreak=1,e.lastActiveDate=t,this.checkAchievements(e),this.saveProgress(e)}checkAchievements(e){const t=[];e.totalLessons>=1&&!e.achievements.includes("first_lesson")&&t.push("first_lesson"),e.totalLessons>=5&&!e.achievements.includes("code_master")&&t.push("code_master"),e.aiInteractions>=10&&!e.achievements.includes("ai_helper")&&t.push("ai_helper");("number"==typeof e.codeExplanations?e.codeExplanations:e.codeValidations||0)>=20&&!e.achievements.includes("validator")&&t.push("validator"),e.currentStreak>=7&&!e.achievements.includes("streak_7")&&t.push("streak_7"),e.filesSaved>=10&&!e.achievements.includes("editor_pro")&&t.push("editor_pro");e.quizScores.filter(e=>100===e.score).length>=3&&!e.achievements.includes("quiz_champion")&&t.push("quiz_champion");const s=e.quizScores.slice(-5);s.length>=5&&s.every(e=>100===e.score)&&!e.achievements.includes("perfectionist")&&t.push("perfectionist");Object.values(e.subjectProgress).filter(e=>e.completed>0).length>=3&&!e.achievements.includes("explorer")&&t.push("explorer"),t.length>0&&(e.achievements.push(...t),this.showAchievementNotification(t),t.forEach(t=>{this.achievements[t]&&this.addPoints(this.achievements[t].points,e)}),this.saveProgress(e))}showAchievementNotification(e){e.forEach(e=>{const t=this.achievements[e];t&&setTimeout(()=>{alert(`🏆 Achievement Unlocked!\n\n${t.icon} ${t.name}\n${t.description}`)},1e3)})}getStats(){const e=this.getProgress(),t=this.getCurrentLevel(e.points),s=this.levels.find(e=>e.level===t.level+1);return{lessonsCompleted:e.totalLessons,aiInteractions:e.aiInteractions,codeExplanations:"number"==typeof e.codeExplanations?e.codeExplanations:e.codeValidations||0,filesSaved:e.filesSaved,currentStreak:e.currentStreak,longestStreak:e.longestStreak,achievementsCount:e.achievements.length,totalAchievements:Object.keys(this.achievements).length,achievements:e.achievements.map(e=>this.achievements[e]),totalQuizScore:e.totalQuizScore,averageQuizScore:e.averageQuizScore,points:e.points,level:t,nextLevel:s,experiencePoints:e.experiencePoints,timeSpent:e.timeSpent,learningPath:e.learningPath,preferredDifficulty:e.preferredDifficulty,subjectProgress:e.subjectProgress,dailyGoals:e.dailyGoals,weeklyGoals:e.weeklyGoals,completionRate:e.totalLessons>0?e.quizScores.filter(e=>e.score>=70).length/e.quizScores.length*100:0}}incrementExplanations(){const e=this.getProgress();"number"!=typeof e.codeExplanations&&(e.codeExplanations=e.codeValidations||0),e.codeExplanations++,this.checkAchievements(e),this.saveProgress(e)}addTimeSpent(e){const t=this.getProgress();t.timeSpent+=e,this.saveProgress(t)}isLessonCompleted(e){return this.getProgress().lessonsCompleted.includes(e)}exportProgress(){return this.getProgress()}importProgress(e){try{return this.saveProgress(e),!0}catch(e){return!1}}recordQuizScore(e,t,s=0,i=null){const n=this.getProgress(),r={lessonId:e,score:t,date:(new Date).toISOString(),timeSpent:s};if(n.quizScores.push(r),n.totalQuizScore+=t,n.averageQuizScore=n.totalQuizScore/n.quizScores.length,i&&n.subjectProgress[i]){const e=n.subjectProgress[i];e.total++,e.averageScore=(e.averageScore*(e.total-1)+t)/e.total}let o=Math.floor(t/10);100===t&&(o+=10),this.addPoints(o,n),n.dailyGoals.quizzes++,this.checkAchievements(n),this.updateLearningPath(n),this.saveProgress(n)}addPoints(e,t=null){t||(t=this.getProgress()),t.points+=e,t.experiencePoints+=e;const s=this.calculateLevel(t.points);s>t.level&&(t.level=s,this.showLevelUpNotification(s))}calculateLevel(e){for(let t=this.levels.length-1;t>=0;t--)if(e>=this.levels[t].pointsRequired)return this.levels[t].level;return 1}getCurrentLevel(e){return this.levels.find(t=>t.level===this.calculateLevel(e))||this.levels[0]}showLevelUpNotification(e){const t=this.levels.find(t=>t.level===e);t&&setTimeout(()=>{alert(`🎉 Level Up! ${t.badge} ${t.name}\n\nYou've reached level ${e}!`)},500)}updateLearningPath(e){const t=e.averageQuizScore,s=e.totalLessons;s>=20&&t>=85?(e.learningPath="advanced",e.preferredDifficulty="advanced"):s>=10&&t>=70?(e.learningPath="intermediate",e.preferredDifficulty="intermediate"):(e.learningPath="beginner",e.preferredDifficulty="beginner")}getRecommendedLessons(e=[]){const t=this.getProgress(),s=new Set(t.lessonsCompleted);return e.filter(e=>!s.has(e.id)).sort((e,s)=>{const i=e.difficulty===t.preferredDifficulty?1:0,n=s.difficulty===t.preferredDifficulty?1:0;if(i!==n)return n-i;const r=t.subjectProgress[e.subject.toLowerCase()]||{completed:0},o=t.subjectProgress[s.subject.toLowerCase()]||{completed:0};return r.completed-o.completed})}getProgressAnalytics(){const e=this.getProgress(),t=new Date,s=new Date(t.getTime()-6048e5),i=e.quizScores.filter(e=>new Date(e.date)>=s),n=e.lessonsCompleted.filter(e=>new Date(e)>=s);return{weeklyActivity:{quizzes:i.length,lessons:n.length,averageScore:i.length>0?i.reduce((e,t)=>e+t.score,0)/i.length:0},improvement:this.calculateImprovement(e),strengths:this.identifyStrengths(e),recommendations:this.generateRecommendations(e)}}calculateImprovement(e){if(e.quizScores.length<5)return 0;const t=e.quizScores.slice(-5),s=e.quizScores.slice(-10,-5);return t.reduce((e,t)=>e+t.score,0)/t.length-s.reduce((e,t)=>e+t.score,0)/s.length}identifyStrengths(e){const t=[];return Object.entries(e.subjectProgress).forEach(([e,s])=>{s.averageScore>=85?t.push({subject:e,level:"excellent"}):s.averageScore>=70&&t.push({subject:e,level:"good"})}),t}generateRecommendations(e){const t=[];e.currentStreak<3&&t.push("Try to maintain a daily learning streak!"),e.averageQuizScore<70&&t.push("Focus on understanding core concepts before moving to advanced topics.");const s=Object.entries(e.subjectProgress).filter(([e,t])=>t.averageScore<70&&t.total>0);return s.length>0&&t.push(`Spend more time practicing ${s.map(([e])=>e).join(" and ")}.`),t}unlockAchievement(e,t=null){t||(t=this.getProgress()),t.achievements.includes(e)||(t.achievements.push(e),this.showAchievementNotification([e]),this.achievements[e]&&this.addPoints(this.achievements[e].points,t),this.saveProgress(t))}}const progressTracker=new ProgressTracker;window.progressTracker=progressTracker,progressTracker.checkDailyGoals||(progressTracker.checkDailyGoals=function(){const e=this.getProgress(),t=(new Date).toISOString().split("T")[0];e.lastActiveDate!==t&&(e.dailyGoals={lessons:0,quizzes:0,timeSpent:0},this.saveProgress(e));const s={lessons:e.dailyGoals.lessons>=1,quizzes:e.dailyGoals.quizzes>=1,timeSpent:e.dailyGoals.timeSpent>=30};return s});