/*! For license information please see ai.d552550accca296c6100.js.LICENSE.txt */
(()=>{function e(n){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(n)}function n(){var e,a,o="function"==typeof Symbol?Symbol:{},r=o.iterator||"@@iterator",s=o.toStringTag||"@@toStringTag";function i(n,o,r,s){var i=o&&o.prototype instanceof l?o:l,u=Object.create(i.prototype);return t(u,"_invoke",function(n,t,o){var r,s,i,l=0,u=o||[],d=!1,p={p:0,n:0,v:e,a:h,f:h.bind(e,4),d:function(n,t){return r=n,s=0,i=e,p.n=t,c}};function h(n,t){for(s=n,i=t,a=0;!d&&l&&!o&&a<u.length;a++){var o,r=u[a],h=p.p,g=r[2];n>3?(o=g===t)&&(i=r[(s=r[4])?5:(s=3,3)],r[4]=r[5]=e):r[0]<=h&&((o=n<2&&h<r[1])?(s=0,p.v=t,p.n=r[1]):h<g&&(o=n<3||r[0]>t||t>g)&&(r[4]=n,r[5]=t,p.n=g,s=0))}if(o||n>1)return c;throw d=!0,t}return function(o,u,g){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&h(u,g),s=u,i=g;(a=s<2?e:i)||!d;){r||(s?s<3?(s>1&&(p.n=-1),h(s,i)):p.n=i:p.v=i);try{if(l=2,r){if(s||(o="next"),a=r[o]){if(!(a=a.call(r,i)))throw TypeError("iterator result is not an object");if(!a.done)return a;i=a.value,s<2&&(s=0)}else 1===s&&(a=r.return)&&a.call(r),s<2&&(i=TypeError("The iterator does not provide a '"+o+"' method"),s=1);r=e}else if((a=(d=p.n<0)?i:n.call(t,p))!==c)break}catch(n){r=e,s=1,i=n}finally{l=1}}return{value:a,done:d}}}(n,r,s),!0),u}var c={};function l(){}function u(){}function d(){}a=Object.getPrototypeOf;var p=[][r]?a(a([][r]())):(t(a={},r,function(){return this}),a),h=d.prototype=l.prototype=Object.create(p);function g(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,t(e,s,"GeneratorFunction")),e.prototype=Object.create(h),e}return u.prototype=d,t(h,"constructor",d),t(d,"constructor",u),u.displayName="GeneratorFunction",t(d,s,"GeneratorFunction"),t(h),t(h,s,"Generator"),t(h,r,function(){return this}),t(h,"toString",function(){return"[object Generator]"}),(n=function(){return{w:i,m:g}})()}function t(e,n,a,o){var r=Object.defineProperty;try{r({},"",{})}catch(e){r=0}t=function(e,n,a,o){function s(n,a){t(e,n,function(e){return this._invoke(n,a,e)})}n?r?r(e,n,{value:a,enumerable:!o,configurable:!o,writable:!o}):e[n]=a:(s("next",0),s("throw",1),s("return",2))},t(e,n,a,o)}function a(e,n,t,a,o,r,s){try{var i=e[r](s),c=i.value}catch(e){return void t(e)}i.done?n(c):Promise.resolve(c).then(a,o)}function o(e){return function(){var n=this,t=arguments;return new Promise(function(o,r){var s=e.apply(n,t);function i(e){a(s,o,r,i,c,"next",e)}function c(e){a(s,o,r,i,c,"throw",e)}i(void 0)})}}function r(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,s(a.key),a)}}function s(n){var t=function(n,t){if("object"!=e(n)||!n)return n;var a=n[Symbol.toPrimitive];if(void 0!==a){var o=a.call(n,t||"default");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"==e(t)?t:t+""}var i=function(){return e=function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e);try{this.knowledgeBase=null,this.chatMessages=document.getElementById("chatMessages"),this.chatInput=document.getElementById("chatInput"),this.sendButton=document.getElementById("sendButton"),this.examplesContent=document.getElementById("examplesContent"),this.codeEditor=document.getElementById("codeEditor"),this.validateButton=document.getElementById("validateButton"),this.validationResults=document.getElementById("validationResults"),this.languageTabs=document.querySelectorAll(".language-tab"),this.currentLanguage="html";try{this.syntaxChecker=new SyntaxChecker}catch(e){this.syntaxChecker=null}this.aiStatus=document.getElementById("aiStatus"),this.statusRefreshBtn=document.getElementById("statusRefreshBtn"),this.enhanceButton=document.getElementById("enhanceButton"),this.selectedModel="llama-3.1-8b-instant",this.responseStyle="normal",this.chatMessages&&this.chatInput&&this.sendButton&&this.init()}catch(e){}},t=[{key:"init",value:(h=o(n().m(function e(){var t=this;return n().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,this.loadKnowledgeBase();case 1:this.setupEventListeners(),this.loadExamples(),this.addWelcomeMessage(),this.checkAIStatus(),setTimeout(function(){t.setResponseStyle(t.responseStyle)},100);case 2:return e.a(2)}},e,this)})),function(){return h.apply(this,arguments)})},{key:"loadKnowledgeBase",value:(p=o(n().m(function e(){var t;return n().w(function(e){for(;;)switch(e.p=e.n){case 0:return e.p=0,e.n=1,fetch("data/ai-knowledge.json");case 1:return t=e.v,e.n=2,t.json();case 2:this.knowledgeBase=e.v,e.n=4;break;case 3:e.p=3,e.v,this.knowledgeBase={questions:[],categories:{},code_examples:{}};case 4:return e.a(2)}},e,this,[[0,3]])})),function(){return p.apply(this,arguments)})},{key:"setupEventListeners",value:function(){var e=this;try{this.sendButton&&this.chatInput&&(this.sendButton.addEventListener("click",function(){return e.sendMessage()}),this.chatInput.addEventListener("keypress",function(n){"Enter"!==n.key||n.shiftKey||(n.preventDefault(),e.sendMessage())})),this.validateButton&&this.validateButton.addEventListener("click",function(){return e.explainCode()}),this.languageTabs&&this.languageTabs.length>0&&this.languageTabs.forEach(function(n){n&&n.addEventListener("click",function(){return e.switchLanguage(n.dataset.language)})}),this.statusRefreshBtn&&this.statusRefreshBtn.addEventListener("click",function(){return e.checkAIStatus()}),this.enhanceButton&&this.enhanceButton.addEventListener("click",function(){return e.enhancePrompt()})}catch(e){}}},{key:"addWelcomeMessage",value:function(){this.addMessage("ai","üëã Hello! I'm Professor Groq, your coding tutor. I love teaching programming step by step! I'll break down complex concepts into digestible pieces and help you understand the \"why\" behind every line of code. What would you like to learn today?")}},{key:"sendMessage",value:(d=o(n().m(function e(){var t;return n().w(function(e){for(;;)switch(e.n){case 0:if(t=this.chatInput.value.trim()){e.n=1;break}return e.a(2);case 1:return this.addMessage("user",t),this.chatInput.value="",this.showTypingIndicator(),e.n=2,this.processWithGroq(t);case 2:return e.a(2)}},e,this)})),function(){return d.apply(this,arguments)})},{key:"explainCode",value:(u=o(n().m(function e(){var t,a,o=this;return n().w(function(e){for(;;)switch(e.p=e.n){case 0:if(t=this.codeEditor.value.trim()){e.n=1;break}return this.showExplanationResult("Please enter some code to explain.","info"),e.a(2);case 1:return uiManager.setButtonLoading("validateButton",!0,"Analyzing..."),e.p=2,e.n=3,this.explainWithAI(t,this.currentLanguage);case 3:(a=e.v)?this.displayAIExplanation(a):this.showExplanationResult("Unable to generate explanation. Please try again.","error"),window.progressTracker&&window.progressTracker.incrementValidations(),e.n=5;break;case 4:e.p=4,e.v,uiManager.showError("Code explanation failed. Please try again.",function(){return o.explainCode()}),this.showExplanationResult("Unable to explain code. Please check your connection and try again.","error");case 5:return e.p=5,uiManager.setButtonLoading("validateButton",!1),e.f(5);case 6:return e.a(2)}},e,this,[[2,4,5,6]])})),function(){return u.apply(this,arguments)})},{key:"explainWithAI",value:(l=o(n().m(function e(t,a){var o;return n().w(function(e){for(;;)switch(e.p=e.n){case 0:return e.p=0,e.n=1,apiService.post("/api/groq",{code:t,language:a});case 1:return o=e.v,e.a(2,o);case 2:return e.p=2,e.v,e.a(2,null)}},e,null,[[0,2]])})),function(e,n){return l.apply(this,arguments)})},{key:"displayAIExplanation",value:function(e){var n='<div class="ai-explanation-results">';n+='<div class="explanation-content">',n+='<div class="explanation-text">'.concat(this.formatResponse(e.response||e.explanation||e),"</div>"),n+="</div>",n+='<div class="explanation-actions">',n+='<button onclick="copyAllCode()" class="copy-btn"><i class="fas fa-copy"></i> Copy All Code</button>',n+="</div>",n+="</div>",this.validationResults.innerHTML=n}},{key:"fallbackValidation",value:function(e){var n;switch(this.currentLanguage){case"html":n=this.syntaxChecker.checkHTML(e);break;case"css":n=this.syntaxChecker.checkCSS(e);break;case"javascript":n=this.syntaxChecker.checkJavaScript(e)}this.displayValidationResults(n)}},{key:"displayValidationResults",value:function(e){var n="";e.errors.length>0&&(n+='<div class="validation-errors">',n+="<h4>‚ùå Errors Found:</h4>",e.errors.forEach(function(e){n+='<div class="validation-item error">\n          <strong>Line '.concat(e.line,":</strong> ").concat(e.message,"\n          ").concat(e.suggestion?"<br><em>Suggestion: ".concat(e.suggestion,"</em>"):"","\n        </div>")}),n+="</div>"),e.warnings.length>0&&(n+='<div class="validation-warnings">',n+="<h4>‚ö†Ô∏è Warnings:</h4>",e.warnings.forEach(function(e){n+='<div class="validation-item warning">\n          <strong>Line '.concat(e.line,":</strong> ").concat(e.message,"\n          ").concat(e.suggestion?"<br><em>Suggestion: ".concat(e.suggestion,"</em>"):"","\n        </div>")}),n+="</div>"),0===e.errors.length&&0===e.warnings.length&&(n='<div class="validation-success">‚úÖ Your code looks good! No errors or warnings found.</div>'),this.validationResults.innerHTML=n}},{key:"showExplanationResult",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info";this.validationResults.innerHTML='<div class="explanation-'.concat(n,'">').concat(e,"</div>")}},{key:"switchLanguage",value:function(e){var n=this;this.currentLanguage=e,this.languageTabs.forEach(function(n){n.classList.toggle("active",n.dataset.language===e)}),window.syntaxHighlighter&&window.syntaxHighlighter.removeHighlighting(this.codeEditor),this.codeEditor.placeholder={html:"Enter your HTML code here...\n\nExample:\n<h1>Hello World</h1>\n<p>This is a paragraph.</p>",css:"Enter your CSS code here...\n\nExample:\nbody {\n  font-family: Arial, sans-serif;\n  color: #333;\n}",javascript:'Enter your JavaScript code here...\n\nExample:\nfunction greet(name) {\n  return "Hello, " + name + "!";\n}\n\nconsole.log(greet("World"));'}[e],this.codeEditor.value="",window.syntaxHighlighter&&setTimeout(function(){window.syntaxHighlighter.applyHighlighting(n.codeEditor,e)},100),this.validationResults.innerHTML=""}},{key:"loadExamples",value:function(){var e=this;try{if(!this.knowledgeBase||!this.knowledgeBase.code_examples)return;if(!this.examplesContent)return;var n="";Object.keys(this.knowledgeBase.code_examples).forEach(function(t){e.knowledgeBase.code_examples[t].forEach(function(e){n+='\n            <div class="example-item" onclick="aiAssistant.loadExample(\''.concat(t,"', '").concat(e.title.replace(/'/g,"\\'"),"')\">\n              <h4>").concat(e.title,"</h4>\n              <p>").concat(e.description,'</p>\n              <span class="example-language">').concat(t.toUpperCase(),"</span>\n            </div>\n          ")})}),this.examplesContent.innerHTML=n}catch(e){}}},{key:"loadExample",value:function(e,n){var t=this;try{var a=this.knowledgeBase.code_examples[e].find(function(e){return e.title===n});a&&(this.switchLanguage(e),this.codeEditor.value=a.code,window.syntaxHighlighter&&setTimeout(function(){window.syntaxHighlighter.applyHighlighting(t.codeEditor,e)},100),this.addMessage("ai","I've loaded the \"".concat(n,'" example into the code editor. Try modifying it and then click "Explain Code" to check for any issues!')))}catch(e){}}},{key:"addMessage",value:function(e,n){try{if(!this.chatMessages)return;var t=document.createElement("div");t.className="message ".concat(e,"-message");var a="ai"===e?"ü§ñ":"üë§",o="ai"===e?"AI Assistant":"You";t.innerHTML='\n        <div class="message-avatar">'.concat(a,'</div>\n        <div class="message-content">\n          <div class="message-sender">').concat(o,'</div>\n          <div class="message-text">').concat(this.formatResponse(n),"</div>\n        </div>\n      "),this.chatMessages.appendChild(t),this.chatMessages.scrollTop=this.chatMessages.scrollHeight}catch(e){}}},{key:"showTypingIndicator",value:function(){try{if(!this.chatMessages)return;var e=document.createElement("div");e.className="message ai-message typing-indicator",e.id="typing-indicator",e.innerHTML='\n        <div class="message-avatar">ü§ñ</div>\n        <div class="message-content">\n          <div class="message-sender">AI Assistant</div>\n          <div class="message-text">\n            <span class="typing-dots">\n              <span></span><span></span><span></span>\n            </span>\n          </div>\n        </div>\n      ',this.chatMessages.appendChild(e),this.chatMessages.scrollTop=this.chatMessages.scrollHeight}catch(e){}}},{key:"hideTypingIndicator",value:function(){try{var e=document.getElementById("typing-indicator");e&&e.remove()}catch(e){}}},{key:"formatResponse",value:function(e){var n=this;return e=(e=(e=(e=this.normalizeResponseCase(e)).replace(/```(\w+)?\n([\s\S]*?)```/g,function(e,t,a){var o="code-"+Math.random().toString(36).substr(2,9);return'<div class="code-block-container">\n        <div class="code-block-header">\n          <span class="code-language">'.concat(t||"text","</span>\n          <button onclick=\"copyCodeBlock('").concat(o,'\')" class="code-copy-btn" title="Copy code">\n            <i class="fas fa-copy"></i>\n          </button>\n        </div>\n        <pre><code id="').concat(o,'" class="language-').concat(t||"text",'">').concat(n.escapeHtml(a.trim()),"</code></pre>\n      </div>")})).replace(/`([^`]+)`/g,"<code>$1</code>")).replace(/\n/g,"<br>")}},{key:"escapeHtml",value:function(e){var n=document.createElement("div");return n.textContent=e,n.innerHTML}},{key:"normalizeResponseCase",value:function(e){if(!e||"string"!=typeof e)return e;var n=e.replace(/```[\s\S]*?```/g,"").replace(/[^A-Za-z]/g,""),t=(n.match(/[A-Z]/g)||[]).length;return(n.length?t/n.length:0)>.6?e.toLowerCase().replace(/(^\s*[a-z])|([.!?]\s*[a-z])/g,function(e){return e.toUpperCase()}):e.replace(/(^\s*[a-z])/,function(e){return e.toUpperCase()})}},{key:"enhancePrompt",value:(c=o(n().m(function e(){var t,a,o,r;return n().w(function(e){for(;;)switch(e.p=e.n){case 0:if(t=this.chatInput.value.trim()){e.n=1;break}return this.addMessage("ai","Please enter a prompt first before enhancing it."),e.a(2);case 1:return uiManager.setButtonLoading("enhanceButton",!0,"Enhancing..."),e.p=2,a='You are a prompt enhancement expert. Take this user prompt about coding/web development and make it clearer, more specific, and more likely to get a helpful response. Add context if needed, but keep it concise. Original prompt: "'.concat(t,'"\n\nPlease provide 2-3 enhanced versions of this prompt, each on a new line, starting with "Enhanced:"'),e.n=3,apiService.post("/api/groq",{messages:[{role:"user",content:a}],model:this.selectedModel,responseStyle:"brief"});case 3:o=e.v,uiManager.setButtonLoading("enhanceButton",!1),o&&o.response?(r=o.response.split("\n").filter(function(e){return e.trim().startsWith("Enhanced:")}).map(function(e){return e.replace("Enhanced:","").trim()})).length>0?this.showEnhancementOptions(r,t):this.addMessage("ai","I couldn't generate enhanced prompts. Your original prompt looks good as is!"):this.addMessage("ai","Unable to enhance prompt right now. Please try again later."),e.n=5;break;case 4:e.p=4,e.v,uiManager.setButtonLoading("enhanceButton",!1),this.addMessage("ai","Sorry, I couldn't enhance your prompt. Please try again.");case 5:return e.a(2)}},e,this,[[2,4]])})),function(){return c.apply(this,arguments)})},{key:"showEnhancementOptions",value:function(e,n){var t=this,a="‚ú® **Enhanced Prompt Options**\n\nI've improved your prompt to get better AI responses:\n\n";e.forEach(function(e,n){a+="".concat(n+1,'. "').concat(e,'"\n')}),a+='\n**Choose an option by clicking the button below, or keep your original:** "'.concat(n,'"'),this.addMessage("ai",a),setTimeout(function(){t.addEnhancementButtons(e,n)},500)}},{key:"addEnhancementButtons",value:function(e,n){var t=this,a=document.createElement("div");a.className="enhancement-buttons",a.style.cssText="\n      display: flex;\n      gap: 0.5rem;\n      flex-wrap: wrap;\n      margin-top: 1rem;\n      padding: 1rem;\n      background: #f8f9fa;\n      border-radius: 8px;\n      border: 1px solid #e9ecef;\n    ",e.forEach(function(e,n){var o=document.createElement("button");o.textContent="Use Option ".concat(n+1),o.className="enhancement-btn",o.style.cssText="\n        padding: 0.5rem 1rem;\n        background: #667eea;\n        color: white;\n        border: none;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 0.9rem;\n        transition: background 0.3s ease;\n      ",o.onmouseover=function(){return o.style.background="#5a67d8"},o.onmouseout=function(){return o.style.background="#667eea"},o.onclick=function(){t.chatInput.value=e,a.remove(),t.addMessage("ai","‚úÖ Applied enhanced prompt option ".concat(n+1,"!"))},a.appendChild(o)});var o=document.createElement("button");o.textContent="Keep Original",o.className="enhancement-btn secondary",o.style.cssText="\n      padding: 0.5rem 1rem;\n      background: #6c757d;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      cursor: pointer;\n      font-size: 0.9rem;\n      transition: background 0.3s ease;\n    ",o.onmouseover=function(){return o.style.background="#5a6268"},o.onmouseout=function(){return o.style.background="#6c757d"},o.onclick=function(){a.remove(),t.addMessage("ai","‚úÖ Kept your original prompt!")},a.appendChild(o);var r=this.chatMessages.querySelector(".message.ai-message:last-child .message-content");r&&(r.appendChild(a),this.chatMessages.scrollTop=this.chatMessages.scrollHeight)}},{key:"setResponseStyle",value:function(e){this.responseStyle=e,["briefBtn","normalBtn","detailedBtn"].forEach(function(n){var t=document.getElementById(n);t&&t.classList.toggle("active",n===e+"Btn")}),window.responseStyleInitialized&&this.addMessage("ai","‚úÖ Response style set to: ".concat(e.charAt(0).toUpperCase()+e.slice(1))),window.responseStyleInitialized=!0}},{key:"copyCodeBlock",value:function(e){var n=document.getElementById(e);n&&navigator.clipboard.writeText(n.textContent).then(function(){var e=n.parentElement.previousElementSibling.querySelector(".code-copy-btn");if(e){var t=e.innerHTML;e.innerHTML='<i class="fas fa-check"></i>',e.style.color="#28a745",setTimeout(function(){e.innerHTML=t,e.style.color=""},1e3)}})}},{key:"showModelSuggestion",value:function(e){var n="üí° **Model Suggestion:** ".concat(e,"\n\nTo get the best AI experience, make sure your Groq API key is configured in the backend .env file.");this.addMessage("ai",n)}},{key:"showSetupSuggestion",value:function(e){this.addMessage("ai","üöÄ **Setup Required:** AI assistant needs a Groq API key to work.\n\n**Quick Setup Steps:**\n1. Get API key: https://console.groq.com/\n2. Add to backend .env: GROQ_API_KEY=your_key_here\n3. Restart the server\n\n**Why Groq?**\n‚Ä¢ Ultra-fast AI inference with Llama 3 models\n‚Ä¢ Professional code analysis and explanations\n‚Ä¢ Advanced understanding of web development\n‚Ä¢ Perfect for learning and professional development\n\nOnce setup is complete, refresh this page to start chatting with AI! ü§ñ")}},{key:"checkAIStatus",value:(i=o(n().m(function e(){var t,a=this;return n().w(function(e){for(;;)switch(e.p=e.n){case 0:if(this.aiStatus){e.n=1;break}return e.a(2);case 1:return e.p=1,this.aiStatus.innerHTML='<i class="fas fa-circle-notch fa-spin"></i> Checking AI status...',this.aiStatus.className="ai-status checking",e.n=2,apiService.get("/api/groq/health");case 2:"healthy"===(t=e.v).status?(this.aiStatus.innerHTML='<i class="fas fa-check-circle"></i> AI Ready',this.aiStatus.className="ai-status healthy",this.aiStatus.title="Groq AI configured and ready"):(this.aiStatus.innerHTML='<i class="fas fa-times-circle"></i> AI Unavailable',this.aiStatus.className="ai-status unhealthy",this.aiStatus.title=t.suggestions.join("\n"),t.suggestions.length>0&&setTimeout(function(){a.showSetupSuggestion(t.suggestions)},2e3)),e.n=4;break;case 3:e.p=3,e.v,this.aiStatus.innerHTML='<i class="fas fa-exclamation-triangle"></i> Status Check Failed',this.aiStatus.className="ai-status error",this.aiStatus.title="Unable to check AI status. Backend may not be running.";case 4:return e.a(2)}},e,this,[[1,3]])})),function(){return i.apply(this,arguments)})},{key:"getFallbackResponse",value:function(e){var n=e.toLowerCase().trim();if(["code","javascript","html","css","function","variable","class","method","array","object","loop","condition","if","else","for","while","switch","dom","api","fetch","async","await","promise","callback","event","element","tag","selector","style","responsive","framework","library","react","vue","angular","node","express","database","sql","mongodb","git","github","debug","error","bug","fix","troubleshoot","optimize","performance","security","testing","validation","syntax","structure","algorithm","data structure","recursion","iteration","scope","closure","prototype","inheritance","polymorphism","encapsulation","abstraction"].some(function(e){return n.includes(e)}))return this.getCodeSpecificResponse(n)}},{key:"getCodeSpecificResponse",value:function(e){return e.includes("html")?this.getHTMLResponse(e):e.includes("css")?this.getCSSResponse(e):e.includes("javascript")||e.includes("js")?this.getJavaScriptResponse(e):this.getGeneralCodeResponse(e)}},{key:"getHTMLResponse",value:function(e){return e.includes("form")||e.includes("input")||e.includes("button")?'üìù **HTML Forms - Step by Step Guide**\n\n**Step 1: Understanding Forms**\nForms are how users interact with web applications. They collect data and send it to servers.\n\n**Step 2: Basic Form Structure**\n```html\n<form action="/submit" method="POST">\n    \x3c!-- Form elements go here --\x3e\n</form>\n```\n\n**Step 3: Input Types**\n‚Ä¢ **text** - Single line text input\n‚Ä¢ **email** - Email validation\n‚Ä¢ **password** - Hidden text input\n‚Ä¢ **number** - Numeric input only\n‚Ä¢ **date** - Date picker\n‚Ä¢ **checkbox** - Multiple selections\n‚Ä¢ **radio** - Single selection from options\n\n**Step 4: Form Elements**\n```html\n<label for="username">Username:</label>\n<input type="text" id="username" name="username" required>\n\n<label for="email">Email:</label>\n<input type="email" id="email" name="email" required>\n\n<button type="submit">Submit</button>\n```\n\n**Step 5: Form Validation**\n‚Ä¢ **required** - Must be filled\n‚Ä¢ **minlength/maxlength** - Text length limits\n‚Ä¢ **pattern** - Regular expression validation\n\n**What type of form are you building?** üéØ':e.includes("table")||e.includes("data")?"üìä **HTML Tables - Step by Step Guide**\n\n**Step 1: Table Structure**\n```html\n<table>\n    <thead>\n        <tr>\n            <th>Header 1</th>\n            <th>Header 2</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Data 1</td>\n            <td>Data 2</td>\n        </tr>\n    </tbody>\n</table>\n```\n\n**Step 2: Table Elements**\n‚Ä¢ **<table>** - Main container\n‚Ä¢ **<thead>** - Header section\n‚Ä¢ **<tbody>** - Body content\n‚Ä¢ **<tr>** - Table row\n‚Ä¢ **<th>** - Header cell\n‚Ä¢ **<td>** - Data cell\n\n**Step 3: Advanced Features**\n‚Ä¢ **colspan** - Span multiple columns\n‚Ä¢ **rowspan** - Span multiple rows\n‚Ä¢ **<caption>** - Table title\n\n**Step 4: Professional Styling**\n```css\ntable {\n    border-collapse: collapse;\n    width: 100%;\n}\nth, td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n}\nth {\n    background-color: #f2f2f2;\n}\n```\n\n**What data do you want to display in your table?** üìã":this.getDefaultHTMLResponse()}},{key:"getDefaultHTMLResponse",value:function(){return'üéì **HTML Elements - Step by Step Learning**\n\n**Step 1: Understanding HTML Structure**\nHTML (HyperText Markup Language) is the foundation of web pages. Think of it like building blocks for a house.\n\n**Step 2: Basic Elements**\n‚Ä¢ `<html>` - The main container (like the foundation)\n‚Ä¢ `<head>` - Hidden information (like the blueprint)\n‚Ä¢ `<body>` - Visible content (like the rooms)\n\n**Step 3: Content Elements**\n‚Ä¢ `<h1>` - Main heading (big and important)\n‚Ä¢ `<p>` - Paragraph text (normal size)\n‚Ä¢ `<div>` - Container (like a room divider)\n\n**Step 4: Interactive Elements**\n‚Ä¢ `<a href="url">` - Links (connect pages)\n‚Ä¢ `<img src="path" alt="description">` - Images (visual content)\n‚Ä¢ `<button>` - Clickable buttons (user interaction)\n\n**Step 5: Professional Example**\n```html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <title>My First Page</title>\n</head>\n<body>\n    <h1>Welcome to Web Development!</h1>\n    <p>This is a paragraph explaining HTML.</p>\n    <div>\n        <img src="image.jpg" alt="Learning HTML">\n        <button>Click Me!</button>\n    </div>\n</body>\n</html>\n```\n\n**Step 6: Practice Exercise**\nTry creating your own HTML page with:\n1. A main heading\n2. A paragraph explaining what you learned\n3. An image with alt text\n4. A link to your favorite website\n\n**What would you like to learn next?** üéØ'}},{key:"getCSSResponse",value:function(e){return e.includes("flexbox")||e.includes("flex")?"üéØ **CSS Flexbox - Step by Step Guide**\n\n**Step 1: What is Flexbox?**\nFlexbox is a layout system that makes it easy to arrange items in rows or columns with perfect alignment.\n\n**Step 2: Container Setup**\n```css\n.container {\n    display: flex;        /* Enable flexbox */\n    justify-content: center;  /* Horizontal alignment */\n    align-items: center;      /* Vertical alignment */\n}\n```\n\n**Step 3: Main Properties**\n‚Ä¢ **justify-content** - Horizontal alignment (flex-start, center, flex-end, space-between, space-around)\n‚Ä¢ **align-items** - Vertical alignment (flex-start, center, flex-end, stretch)\n‚Ä¢ **flex-direction** - Direction (row, column, row-reverse, column-reverse)\n\n**Step 4: Item Properties**\n```css\n.item {\n    flex-grow: 1;     /* Take available space */\n    flex-shrink: 0;   /* Don't shrink */\n    flex-basis: 200px; /* Initial size */\n    /* Short way: */\n    flex: 1 0 200px;\n}\n```\n\n**Step 5: Professional Layout Example**\n```css\n.navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n    background: #333;\n    color: white;\n}\n\n.nav-links {\n    display: flex;\n    gap: 2rem;\n}\n\n.nav-links a {\n    color: white;\n    text-decoration: none;\n    padding: 0.5rem 1rem;\n    border-radius: 4px;\n    transition: background 0.3s;\n}\n\n.nav-links a:hover {\n    background: rgba(255,255,255,0.1);\n}\n```\n\n**Step 6: Responsive Design**\n```css\n/* Mobile first */\n.flex-container {\n    display: flex;\n    flex-wrap: wrap;  /* Allow wrapping */\n}\n\n/* Desktop */\n@media (min-width: 768px) {\n    .flex-container {\n        flex-wrap: nowrap;\n    }\n}\n```\n\n**What layout are you trying to create?** üé®":e.includes("grid")||e.includes("layout")?'üî≤ **CSS Grid - Step by Step Guide**\n\n**Step 1: What is CSS Grid?**\nCSS Grid is a powerful 2-dimensional layout system that lets you create complex layouts with rows and columns.\n\n**Step 2: Container Setup**\n```css\n.grid-container {\n    display: grid;                    /* Enable grid */\n    grid-template-columns: 1fr 1fr;   /* Two equal columns */\n    grid-template-rows: auto;         /* Auto-sized rows */\n    gap: 20px;                        /* Space between items */\n}\n```\n\n**Step 3: Grid Template Areas**\n```css\n.grid-container {\n    display: grid;\n    grid-template-areas:\n        "header header"\n        "sidebar main"\n        "footer footer";\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: auto 1fr auto;\n}\n\n.header { grid-area: header; }\n.sidebar { grid-area: sidebar; }\n.main { grid-area: main; }\n.footer { grid-area: footer; }\n```\n\n**Step 4: Responsive Grid**\n```css\n/* Mobile: single column */\n.grid-container {\n    grid-template-columns: 1fr;\n    grid-template-areas:\n        "header"\n        "main"\n        "sidebar"\n        "footer";\n}\n\n/* Tablet: two columns */\n@media (min-width: 768px) {\n    .grid-container {\n        grid-template-columns: 1fr 300px;\n        grid-template-areas:\n            "header header"\n            "main sidebar"\n            "footer footer";\n    }\n}\n```\n\n**Step 5: Professional Grid Layout**\n```css\n.card-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n    padding: 2rem;\n}\n\n.card {\n    background: white;\n    border-radius: 8px;\n    padding: 1.5rem;\n    box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    transition: transform 0.3s ease;\n}\n\n.card:hover {\n    transform: translateY(-4px);\n}\n```\n\n**What kind of layout are you building?** üìê':this.getDefaultCSSResponse()}},{key:"getDefaultCSSResponse",value:function(){return"üé® **CSS Styling - Step by Step Tutorial**\n\n**Step 1: What is CSS?**\nCSS (Cascading Style Sheets) is like the interior design of your webpage. HTML provides the structure, CSS makes it beautiful!\n\n**Step 2: How CSS Works**\n1. **Selector** - What you want to style (`h1`, `.class`, `#id`)\n2. **Property** - What aspect to change (`color`, `font-size`)\n3. **Value** - The new setting (`red`, `16px`)\n\n**Step 3: Color Methods**\n‚Ä¢ **Named colors:** `color: red;` (simple but limited)\n‚Ä¢ **Hex codes:** `color: #FF0000;` (most popular)\n‚Ä¢ **RGB:** `color: rgb(255, 0, 0);` (precise control)\n‚Ä¢ **HSL:** `color: hsl(0, 100%, 50%);` (intuitive)\n\n**Step 4: Typography Basics**\n```css\n/* Font family (fallback chain) */\nfont-family: Arial, Helvetica, sans-serif;\n\n/* Size options */\nfont-size: 16px;        /* pixels */\nfont-size: 1rem;        /* relative units */\nfont-size: 100%;        /* percentage */\n\n/* Weight variations */\nfont-weight: normal;    /* 400 */\nfont-weight: bold;      /* 700 */\nfont-weight: 300;       /* light */\n```\n\n**Step 5: Layout & Spacing**\n```css\n/* Spacing (margin = external, padding = internal) */\nmargin: 20px;           /* all sides */\npadding: 10px 20px;     /* top-bottom, left-right */\n\n/* Layout methods */\ndisplay: flex;          /* modern flexible layouts */\ndisplay: grid;          /* powerful grid systems */\n```\n\n**Step 6: Practice Exercise**\n1. Create HTML with headings and paragraphs\n2. Add CSS to change colors and fonts\n3. Experiment with different spacing values\n4. Try flexbox for centering content\n\n**Ready to style your first webpage?** üöÄ\n\n**What specific styling would you like to learn?**"}},{key:"getJavaScriptResponse",value:function(e){return e.includes("array")||e.includes("list")?"üìã **JavaScript Arrays - Step by Step Guide**\n\n**Step 1: What are Arrays?**\nArrays are ordered lists that can hold multiple values. Think of them like shopping lists or numbered boxes.\n\n**Step 2: Creating Arrays**\n```javascript\n// Method 1: Array literal (recommended)\nconst fruits = ['apple', 'banana', 'orange'];\n\n// Method 2: Array constructor\nconst numbers = new Array(1, 2, 3, 4, 5);\n\n// Method 3: Empty array\nconst empty = [];\n```\n\n**Step 3: Accessing Elements**\n```javascript\nconst colors = ['red', 'blue', 'green'];\n\n// Access by index (starts at 0)\nconsole.log(colors[0]);  // 'red'\nconsole.log(colors[1]);  // 'blue'\n\n// Length property\nconsole.log(colors.length);  // 3\n```\n\n**Step 4: Common Array Methods**\n```javascript\nconst tasks = ['learn', 'practice', 'build'];\n\n// Add to end\ntasks.push('deploy');  // ['learn', 'practice', 'build', 'deploy']\n\n// Remove from end\ntasks.pop();  // ['learn', 'practice', 'build']\n\n// Add to beginning\ntasks.unshift('plan');  // ['plan', 'learn', 'practice', 'build']\n\n// Remove from beginning\ntasks.shift();  // ['learn', 'practice', 'build']\n```\n\n**Step 5: Array Iteration**\n```javascript\nconst numbers = [1, 2, 3, 4, 5];\n\n// Method 1: forEach (execute for each item)\nnumbers.forEach((number, index) => {\n    console.log(`Number ${index}: ${number}`);\n});\n\n// Method 2: map (transform each item)\nconst doubled = numbers.map(num => num * 2);\nconsole.log(doubled);  // [2, 4, 6, 8, 10]\n\n// Method 3: filter (keep items that match condition)\nconst evenNumbers = numbers.filter(num => num % 2 === 0);\nconsole.log(evenNumbers);  // [2, 4]\n```\n\n**Step 6: Advanced Array Methods**\n```javascript\nconst scores = [85, 92, 78, 96, 88];\n\n// Find specific item\nconst highScore = scores.find(score => score > 90);  // 92\n\n// Check if all items match condition\nconst allPassing = scores.every(score => score >= 70);  // true\n\n// Check if any item matches condition\nconst hasPerfect = scores.some(score => score === 100);  // false\n\n// Sort array\nconst sortedScores = [...scores].sort((a, b) => b - a);  // [96, 92, 88, 85, 78]\n```\n\n**Step 7: Practice Exercise**\n1. Create an array of your favorite foods\n2. Add and remove items from the array\n3. Use map to transform the array (e.g., make all uppercase)\n4. Use filter to find items that meet a condition\n\n**What would you like to do with arrays?** üî¢":e.includes("object")||e.includes("property")?"üèóÔ∏è **JavaScript Objects - Step by Step Guide**\n\n**Step 1: What are Objects?**\nObjects are collections of key-value pairs. Think of them like dictionaries or like a person's profile with different attributes.\n\n**Step 2: Creating Objects**\n```javascript\n// Method 1: Object literal (recommended)\nconst person = {\n    name: 'Alice',\n    age: 25,\n    isStudent: true,\n    hobbies: ['reading', 'coding']\n};\n\n// Method 2: Object constructor\nconst car = new Object();\ncar.make = 'Toyota';\ncar.model = 'Camry';\ncar.year = 2023;\n```\n\n**Step 3: Accessing Properties**\n```javascript\nconst user = {\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john@example.com',\n    age: 30\n};\n\n// Dot notation (recommended)\nconsole.log(user.firstName);  // 'John'\nconsole.log(user.age);        // 30\n\n// Bracket notation (for dynamic access)\nconst property = 'email';\nconsole.log(user[property]);  // 'john@example.com'\n```\n\n**Step 4: Modifying Objects**\n```javascript\nconst settings = {\n    theme: 'light',\n    notifications: true,\n    language: 'en'\n};\n\n// Add new property\nsettings.volume = 80;\n\n// Update existing property\nsettings.theme = 'dark';\n\n// Delete property\ndelete settings.language;\n```\n\n**Step 5: Object Methods**\n```javascript\nconst calculator = {\n    // Method (function inside object)\n    add: function(a, b) {\n        return a + b;\n    },\n\n    // Shorthand method (ES6+)\n    multiply(a, b) {\n        return a * b;\n    },\n\n    // Arrow function method\n    divide: (a, b) => a / b\n};\n\n// Using methods\nconsole.log(calculator.add(5, 3));     // 8\nconsole.log(calculator.multiply(4, 6)); // 24\n```\n\n**Step 6: Advanced Object Features**\n```javascript\n// Destructuring\nconst { name, age } = person;\nconsole.log(name, age);  // 'Alice' 25\n\n// Spread operator\nconst newPerson = { ...person, city: 'New York' };\n\n// Object.keys() - get all property names\nconsole.log(Object.keys(person));  // ['name', 'age', 'isStudent', 'hobbies']\n\n// Object.values() - get all property values\nconsole.log(Object.values(person));  // ['Alice', 25, true, [...]]\n\n// Object.entries() - get key-value pairs\nconsole.log(Object.entries(person));\n```\n\n**Step 7: Practice Exercise**\n1. Create an object representing a book (title, author, pages, genre)\n2. Add methods to calculate reading time and get book info\n3. Create an array of book objects\n4. Use map to extract all book titles\n\n**What kind of object are you working with?** üìö":e.includes("loop")||e.includes("repeat")||e.includes("iterate")?"üîÑ **JavaScript Loops - Step by Step Guide**\n\n**Step 1: What are Loops?**\nLoops are programming structures that repeat actions. They save time and reduce code duplication.\n\n**Step 2: For Loop (counting)**\n```javascript\n// Basic structure:\n// for (initialization; condition; increment) { code }\n\nfor (let i = 0; i < 5; i++) {\n    console.log('Count:', i);  // 0, 1, 2, 3, 4\n}\n```\n\n**Step 3: While Loop (condition-based)**\n```javascript\n// Basic structure:\n// while (condition) { code }\n\nlet count = 0;\nwhile (count < 3) {\n    console.log('While count:', count);\n    count++;  // Important: increment or you'll have infinite loop!\n}\n```\n\n**Step 4: For...of Loop (array iteration)**\n```javascript\nconst fruits = ['apple', 'banana', 'orange'];\n\nfor (const fruit of fruits) {\n    console.log('I like', fruit);\n}\n// Output: I like apple, I like banana, I like orange\n```\n\n**Step 5: For...in Loop (object properties)**\n```javascript\nconst person = {\n    name: 'Alice',\n    age: 25,\n    city: 'Boston'\n};\n\nfor (const property in person) {\n    console.log(property + ':', person[property]);\n}\n// Output: name: Alice, age: 25, city: Boston\n```\n\n**Step 6: Loop Control**\n```javascript\n// break - exit loop immediately\nfor (let i = 0; i < 10; i++) {\n    if (i === 5) break;\n    console.log(i);  // 0, 1, 2, 3, 4\n}\n\n// continue - skip current iteration\nfor (let i = 0; i < 5; i++) {\n    if (i === 2) continue;\n    console.log(i);  // 0, 1, 3, 4\n}\n```\n\n**Step 7: Nested Loops**\n```javascript\n// Multiplication table\nfor (let i = 1; i <= 3; i++) {\n    for (let j = 1; j <= 3; j++) {\n        console.log(`${i} x ${j} = ${i * j}`);\n    }\n}\n```\n\n**Step 8: Practice Exercise**\n1. Create a loop that counts from 10 to 1\n2. Loop through an array and find the largest number\n3. Create a nested loop to generate a grid pattern\n4. Use loops to validate user input until it's correct\n\n**What are you trying to repeat or iterate over?** üîÅ":this.getDefaultJavaScriptResponse()}},{key:"getDefaultJavaScriptResponse",value:function(){return'‚ö° **JavaScript Variables - Step by Step Guide**\n\n**Step 1: What are Variables?**\nVariables are like labeled boxes where you store information. You give each box a name and put data inside it.\n\n**Step 2: Variable Declaration**\nJavaScript has three ways to create variables:\n\n1. **const** (recommended) - Cannot be changed after creation\n2. **let** (modern) - Can be changed, stays within curly braces\n3. **var** (old) - Can be changed, but avoid in modern code\n\n**Step 3: Declaration Examples**\n```javascript\n// Step 1: Declare and assign\nconst myName = "Alice";        // Text (string)\nlet myAge = 25;               // Number\nlet isStudent = true;         // True/false (boolean)\n\n// Step 2: Use the variables\nconsole.log("Hello, " + myName);  // "Hello, Alice"\nconsole.log("Age:", myAge);       // "Age: 25"\n\n// Step 3: Change let variables (const cannot change)\nmyAge = 26;\nconsole.log("New age:", myAge);   // "New age: 26"\n```\n\n**Step 4: Data Types**\n‚Ä¢ **String:** Text in quotes - `"Hello World"`\n‚Ä¢ **Number:** Numbers - `42, 3.14, -10`\n‚Ä¢ **Boolean:** True/false - `true, false`\n‚Ä¢ **Array:** Lists - `[1, 2, 3, "text"]`\n‚Ä¢ **Object:** Key-value pairs - `{name: "John", age: 30}`\n\n**Step 5: Naming Rules**\n‚úÖ **Good names:** `firstName, user_age, MAX_SIZE`\n‚ùå **Bad names:** `1name, user-age, class` (hyphens)\n\n**Step 6: Practice Exercise**\n1. Create a variable for your favorite color\n2. Create a variable for your birth year\n3. Calculate and store your age\n4. Display a message using all variables\n\n**Which data type would you like to explore next?** üéØ'}},{key:"getGeneralCodeResponse",value:function(e){return e.includes("debug")||e.includes("error")||e.includes("fix")?'üêõ **Debugging Code - Step by Step Problem Solving**\n\n**Step 1: Understanding Errors**\nWhen code doesn\'t work, JavaScript gives you clues through error messages. Don\'t panic - errors are your friends! They tell you exactly what went wrong.\n\n**Step 2: Common Error Types**\n1. **SyntaxError** - "You wrote something wrong"\n   - Missing semicolons, brackets, or quotes\n   - Typos in keywords\n\n2. **ReferenceError** - "I can\'t find that thing"\n   - Using a variable that doesn\'t exist\n   - Forgetting to declare variables\n\n3. **TypeError** - "That\'s not the right type"\n   - Trying to use methods on wrong data types\n   - Calling functions with wrong arguments\n\n**Step 3: Debugging Process**\n```javascript\n// Step 1: Check for obvious errors\nconsole.log("Starting debug...");\n\n// Step 2: Add logging to see what\'s happening\nfunction calculateArea(width, height) {\n    console.log("Width:", width);    // Check inputs\n    console.log("Height:", height);\n\n    let area = width * height;\n    console.log("Area:", area);      // Check calculation\n\n    return area;\n}\n\n// Step 3: Test with simple values\nconsole.log(calculateArea(5, 10));   // Should be 50\n```\n\n**Step 4: Browser Developer Tools (F12)**\n1. **Console tab** - See error messages and your logs\n2. **Sources tab** - Set breakpoints to pause code\n3. **Network tab** - Check API calls\n4. **Elements tab** - Inspect HTML structure\n\n**Step 5: Error Prevention Tips**\n‚Ä¢ Use `console.log()` to check variable values\n‚Ä¢ Test with simple examples first\n‚Ä¢ Read error messages carefully\n‚Ä¢ Use proper variable declarations (`const/let`)\n\n**Step 6: Practice Debugging**\n1. Write code that has an obvious error\n2. Look at the error message in console\n3. Fix the error step by step\n4. Test with different inputs\n\n**What\'s the error message you\'re seeing?** üîç':e.includes("best practice")||e.includes("standard")||e.includes("professional")?"üèÜ **Professional Coding Standards - Step by Step**\n\n**Step 1: Why Standards Matter**\nProfessional code is readable, maintainable, and scalable. It follows industry conventions that make collaboration easier.\n\n**Step 2: Naming Conventions**\n```javascript\n// ‚úÖ Good naming\nconst userFirstName = \"Alice\";     // camelCase for variables\nconst MAX_USER_AGE = 120;         // UPPER_CASE for constants\nfunction calculateUserAge() {}     // camelCase for functions\n\n// ‚ùå Bad naming\nconst a = \"Alice\";                 // Too short, unclear\nconst user_first_name = \"Alice\";   // snake_case (Python style)\nconst userfirstname = \"Alice\";     // No separation\n```\n\n**Step 3: Code Structure**\n```javascript\n// ‚úÖ Well-structured\nfunction processUserData(userId) {\n    // Validate input\n    if (!userId || typeof userId !== 'number') {\n        throw new Error('Invalid user ID');\n    }\n\n    try {\n        const userData = fetchUserData(userId);\n        return formatUserData(userData);\n    } catch (error) {\n        console.error('Processing failed:', error);\n        return null;\n    }\n}\n\n// ‚ùå Poor structure\nfunction p(u) {\n    if(u) return f(u);\n}\n```\n\n**Step 4: Comments and Documentation**\n```javascript\n/**\n * Calculates the total price including tax\n * @param {number} price - Base price before tax\n * @param {number} taxRate - Tax rate as decimal (0.08 for 8%)\n * @returns {number} Total price including tax\n */\nfunction calculateTotalPrice(price, taxRate) {\n    // Validate inputs\n    if (typeof price !== 'number' || price < 0) {\n        throw new Error('Price must be a positive number');\n    }\n\n    const taxAmount = price * taxRate;\n    const total = price + taxAmount;\n\n    return Math.round(total * 100) / 100; // Round to 2 decimal places\n}\n```\n\n**Step 5: Error Handling**\n```javascript\n// ‚úÖ Professional error handling\ntry {\n    const result = riskyOperation();\n    return result;\n} catch (error) {\n    console.error('Operation failed:', error.message);\n    // Log to external service in production\n    throw new Error('Unable to complete operation');\n} finally {\n    // Cleanup code (always runs)\n    closeConnections();\n}\n```\n\n**Step 6: Modern JavaScript Features**\n‚Ä¢ Use **const/let** instead of var\n‚Ä¢ Use **arrow functions** for callbacks\n‚Ä¢ Use **template literals** for string interpolation\n‚Ä¢ Use **destructuring** for cleaner code\n‚Ä¢ Use **async/await** instead of callbacks\n\n**What coding standard would you like to focus on?** üìã":"üíª **General Programming Help**\n\nI can help you with any coding question! Here are some areas I specialize in:\n\n**Web Development:**\n‚Ä¢ HTML structure and semantic markup\n‚Ä¢ CSS styling and responsive design\n‚Ä¢ JavaScript interactivity and logic\n\n**Programming Concepts:**\n‚Ä¢ Variables and data types\n‚Ä¢ Functions and methods\n‚Ä¢ Loops and conditionals\n‚Ä¢ Objects and arrays\n\n**Advanced Topics:**\n‚Ä¢ Error handling and debugging\n‚Ä¢ Code organization and best practices\n‚Ä¢ Performance optimization\n‚Ä¢ Security considerations\n\n**Step 1: Clarify Your Question**\nBefore I provide a detailed answer, could you tell me:\n\n1. **What programming language** are you working with?\n2. **What specific task** are you trying to accomplish?\n3. **What part** are you stuck on or confused about?\n4. **Do you have any existing code** you'd like me to look at?\n\n**What would you like help with today?** üéØ"}},{key:"processWithGroq",value:(s=o(n().m(function e(t){var a,o,r,s,i,c=this;return n().w(function(e){for(;;)switch(e.p=e.n){case 0:return e.p=0,uiManager.setButtonLoading("sendButton",!0,"Thinking..."),e.n=1,apiService.post("/api/groq",{messages:[{role:"user",content:t}],model:this.selectedModel,responseStyle:this.responseStyle});case 1:a=e.v,uiManager.setButtonLoading("sendButton",!1),this.hideTypingIndicator(),o=a.response||a.choices&&a.choices[0]&&a.choices[0].message&&a.choices[0].message.content||"Sorry, I couldn't generate a response.",this.addMessage("ai",this.formatResponse(o)),window.progressTracker&&window.progressTracker.incrementAIInteractions(),e.n=4;break;case 2:if(e.p=2,i=e.v,uiManager.setButtonLoading("sendButton",!1),this.hideTypingIndicator(),r=CONFIG.MESSAGES.AI_UNAVAILABLE,r=i.message.includes("API key")||i.message.includes("API_KEY")?"Groq API Configuration Required\n\nProfessional Setup Steps:\n1. Get Groq API key: https://console.groq.com/\n2. Add to backend .env file: GROQ_API_KEY=your_key_here\n3. Restart server: npm start\n4. Refresh this page\n\nWhy Groq?\n- Ultra-fast AI inference with Llama 3.1 models\n- Professional-grade code analysis\n- FREE access to powerful AI models\n- Industry-leading performance for developers\n\nNeed Help? Check README.md for complete setup guide.":i.message.includes("rate limit")||i.message.includes("429")?"Groq Rate Limit - Professional Usage Tips\n\nWhat happened:\n- Free tier has usage limits (typically 100 requests/hour)\n- This is normal for professional AI services\n\nProfessional Solutions:\n- Wait 5-10 minutes before trying again\n- Consider upgrading to paid tier for higher limits\n- Use the enhanced fallback responses (still professional!)\n- Your code will continue to work during rate limits\n\nWhy this happens:\n- Groq AI provides enterprise-level responses\n- Quality AI requires computational resources\n- Free tier is generous but has reasonable limits":i.message.includes("timeout")||i.message.includes("network")?"Network Connection - Professional Troubleshooting\n\nConnection Issue Detected:\n- Unable to reach Groq AI service\n- This affects AI responses but not core functionality\n\nProfessional Solutions:\n1. Check Connection: Verify internet connectivity\n2. Wait and Retry: AI services can be temporarily busy\n3. Fallback Mode: Professional responses still available\n4. Browser Tools: Check console for detailed errors\n\nWhy this matters:\n- Enterprise AI services require stable connections\n- Professional development includes handling network issues\n- Your learning continues with comprehensive fallbacks\n\nTip: Use browser dev tools (F12) to diagnose network issues.":"AI Service - Professional Error Handling\n\nError Details: ".concat(i.message,"\n\nProfessional Troubleshooting Steps:\n1. Restart Server: Sometimes resolves temporary issues\n2. Verify Configuration: Check API key and network\n3. Fallback Mode: Professional responses still available\n4. Browser Console: Check F12 for detailed diagnostics\n\nWhy errors happen:\n- AI services are complex distributed systems\n- Professional development includes robust error handling\n- Your application continues to function with fallbacks\n\nNext Steps:\n- Try refreshing the page\n- Check server logs for detailed error information\n- Verify all configurations in README.md\n\nDeveloper Tip: Professional applications always include comprehensive error handling."),!(s=this.getFallbackResponse(t))){e.n=3;break}return this.addMessage("ai",s),e.a(2);case 3:this.addMessage("ai",r),uiManager.showError(r,function(){return c.processWithGroq(t)});case 4:return e.a(2)}},e,this,[[0,2]])})),function(e){return s.apply(this,arguments)})}],t&&r(e.prototype,t),a&&r(e,a),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,a,s,i,c,l,u,d,p,h}();document.addEventListener("DOMContentLoaded",function(){try{new i}catch(n){var e=document.querySelector(".ai-container");e&&(e.innerHTML='\n        <div class="ai-error-message" style="padding: 2rem; text-align: center; color: #dc3545; background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px; margin: 2rem;">\n          <h2>‚ùå AI Assistant Error</h2>\n          <p>Failed to load AI Assistant. Please refresh the page or contact support.</p>\n          <p><strong>Error:</strong> '.concat(n.message,'</p>\n          <button onclick="location.reload()" style="padding: 0.5rem 1rem; background: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer;">Refresh Page</button>\n        </div>\n      '))}})})();